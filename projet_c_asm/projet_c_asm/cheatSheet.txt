Tout d'abord, la pile (Stack) est un segment de la memoire dont le mode d'accès est LIFO (Last In => First Out)
ESP (Extended Stack Pointer) est un registre 32 bits (DWORD) du microprocesseur 
qui contient l'adresse de l'élément au sommet de la pile (STACK), c'est à dire l'adresse du dernier élément empilé.

** Pour l'instruction PUSH :
> PUSH source
Se charge de placer la valeur de l'opérande source au sommet de la pile (Stack)
Les formes de push :
	> push ax (Pour registre 16 bits/mem16/imm16)
	> push iVar (Pour registre 32 bits)

Lors d'un PUSH le processeur réaliser deux opérations :
	1) Il diminue l'adresse stockée dans ESP de 2 ou 4 octets en fonction de la taille de l'opérande source ce qui permet de crée un nouveau sommet.
	2) Il place la valeur de l'opérande source dans le nouveau sommet de pile
	
** Pour l'instruction CALL :
>  CALL DWORD PTR fct
	1) Le processeur diminue ESP de 2/4 octets etc comme pour l'instruction PUSH pour réserver un nouveau sommet de pile (STACK)
	dans lequel il copie le contenue du registre EIP (Extended Instruction Pointer)
	EIP (Extended Instruction Pointer) contient à ce moment l'adresse de l'instruction situé juste après CALL dans le programme

--
Pour l'instruction POP :
> POP destination
Se charge de placer la valeur du sommet de la pile dans l'opérande destination.
C'est l'instruction complementaire de PUSH

Le processeur réalise 2 opérations lors d'un POP :
	1) Il place la valeur du sommet de la pile dans l'operande destination
	2) Il augmente l'adresse stockée dans ESP (Extended Stack Pointer) de 2 ou 4 octets suivant la taille de l'operande de destination
		CETTE AUGMENTATION PERMET DE SUPPRIMER LE SOMMET DE LA PILE (STACK)




================================================================
Le nom de l'archive : EZZAYRI_SAMI.rar
Groupe : 2129
NOM Prenom : EZZAYRI Sami